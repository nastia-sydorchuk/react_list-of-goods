{"version":3,"sources":["GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","goodsFromServer","App","state","isShown","isReversed","sortBy","showAll","setState","reverse","reset","sortByAlphabet","sortByLength","this","visibleGoods","sort","a","b","localeCompare","length","className","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAMaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,SCLTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,SAAS,EACTC,YAAY,EACZC,OAAQ,M,EAGVC,QAAU,WACR,EAAKC,SAAS,CAAEJ,SAAS,K,EAG3BK,QAAU,WACR,EAAKD,UAAS,SAAAL,GAAK,MAAK,CAAEE,YAAaF,EAAME,gB,EAG/CK,MAAQ,WACN,EAAKF,SAAU,CAAEF,OAAQ,Q,EAG3BK,eAAiB,WACf,EAAKH,SAAU,CAAEF,OAAQ,c,EAG3BM,aAAe,WACb,EAAKJ,SAAU,CAAEF,OAAQ,Y,4CAG3B,WACE,MAAwCO,KAAKV,MAArCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,OAEvBQ,EAAY,UAAOb,GAczB,OAZAa,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQX,GACN,IAAK,WAAY,OAAOU,EAAEE,cAAcD,GACxC,IAAK,SAAU,OAAOD,EAAEG,OAASF,EAAEE,OACnC,QAAS,OAAO,MAIhBd,GACFS,EAAaL,UAIb,sBAAKW,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,oBAEEhB,GACA,wBACEiB,KAAK,SACLD,UAAU,6BACVE,QAAST,KAAKN,QAHhB,mBASDH,GACC,qCACE,sBAAKgB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,6BACVE,QAAST,KAAKJ,QAHhB,qBAOA,wBACEY,KAAK,SACLD,UAAU,6BACVE,QAAST,KAAKF,eAHhB,iCAOA,wBACEU,KAAK,SACLD,UAAU,6BACVE,QAAST,KAAKH,MAHhB,mBAOA,wBACEW,KAAK,SACLD,UAAU,6BACVE,QAAST,KAAKD,aAHhB,+BAQF,cAAC,EAAD,CAAWd,MAAOgB,c,GA1FZS,IAAMC,WAkGTtB,ICtHfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8944ae44.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  isShown: boolean,\n  isReversed: boolean,\n  sortBy: string,\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isShown: false,\n    isReversed: false,\n    sortBy: 'id',\n  };\n\n  showAll = () => {\n    this.setState({ isShown: true });\n  };\n\n  reverse = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  reset = () => {\n    this.setState(({ sortBy: 'id' }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState(({ sortBy: 'alphabet' }));\n  };\n\n  sortByLength = () => {\n    this.setState(({ sortBy: 'length' }));\n  };\n\n  render() {\n    const { isShown, isReversed, sortBy } = this.state;\n\n    const visibleGoods = [...goodsFromServer];\n\n    visibleGoods.sort((a: string, b: string): number => {\n      switch (sortBy) {\n        case 'alphabet': return a.localeCompare(b);\n        case 'length': return a.length - b.length;\n        default: return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App content\">\n        <h1 className=\"title mt-6\">Goods</h1>\n\n        {!isShown && (\n          <button\n            type=\"button\"\n            className=\"button is-info is-inverted\"\n            onClick={this.showAll}\n          >\n            Start\n          </button>\n        )}\n\n        {isShown && (\n          <>\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                className=\"button is-info is-inverted\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                className=\"button is-info is-inverted\"\n                onClick={this.sortByAlphabet}\n              >\n                Sort alphabetically\n              </button>\n              <button\n                type=\"button\"\n                className=\"button is-info is-inverted\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n              <button\n                type=\"button\"\n                className=\"button is-info is-inverted\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n            </div>\n            <GoodsList goods={visibleGoods} />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}